// <auto-generated />
using System;
using MentorsApi.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MentorsApi.Infrastructure.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20210629182546_initialcreat")]
    partial class initialcreat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MentorsApi.Core.Entities.AreaOfMentoring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Area")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MentorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.ToTable("AreaOfMentoring");
                });

            modelBuilder.Entity("MentorsApi.Core.Entities.Expertise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExpertiseType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MentorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("UserId");

                    b.ToTable("Expertises");
                });

            modelBuilder.Entity("MentorsApi.Core.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LanguageType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MentorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("UserId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("MentorsApi.Core.Entities.Mentor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("About")
                        .HasColumnType("TEXT");

                    b.Property<string>("Company")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsMentorVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PathUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("MentorsApi.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PathUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MentorsApi.Core.Entities.AreaOfMentoring", b =>
                {
                    b.HasOne("MentorsApi.Core.Entities.Mentor", null)
                        .WithMany("AreaOfMentoring")
                        .HasForeignKey("MentorId");
                });

            modelBuilder.Entity("MentorsApi.Core.Entities.Expertise", b =>
                {
                    b.HasOne("MentorsApi.Core.Entities.Mentor", null)
                        .WithMany("Expertise")
                        .HasForeignKey("MentorId");

                    b.HasOne("MentorsApi.Core.Entities.User", null)
                        .WithMany("Expertise")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MentorsApi.Core.Entities.Language", b =>
                {
                    b.HasOne("MentorsApi.Core.Entities.Mentor", null)
                        .WithMany("Languages")
                        .HasForeignKey("MentorId");

                    b.HasOne("MentorsApi.Core.Entities.User", null)
                        .WithMany("Languages")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MentorsApi.Core.Entities.Mentor", b =>
                {
                    b.Navigation("AreaOfMentoring");

                    b.Navigation("Expertise");

                    b.Navigation("Languages");
                });

            modelBuilder.Entity("MentorsApi.Core.Entities.User", b =>
                {
                    b.Navigation("Expertise");

                    b.Navigation("Languages");
                });
#pragma warning restore 612, 618
        }
    }
}
